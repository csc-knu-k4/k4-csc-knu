// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OsvitaDAL.Data;

#nullable disable

namespace OsvitaDAL.Migrations
{
    [DbContext(typeof(OsvitaDbContext))]
    [Migration("20250318133920_AddTopicPlanDetailsToEducationClassPlan")]
    partial class AddTopicPlanDetailsToEducationClassPlan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationClassUser", b =>
                {
                    b.Property<int>("EducationClassesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("EducationClassesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("EducationClassUser");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentType")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentAssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemDescriptionImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentAssignmentId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AssignmentLinks");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentSetProgressDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentSetProgressDetailId");

                    b.ToTable("AssignmentProgressDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AssignmentSets");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentSetPlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentSetId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationClassPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationClassPlanId");

                    b.ToTable("AssignmentSetPlanDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentSetProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentSetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatisticId");

                    b.ToTable("AssignmentSetProgressDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.ContentBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("ContentBlocks");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("EducationClasses");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClassInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationClassId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EducationClassInvitations");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClassPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationClassId")
                        .IsUnique();

                    b.ToTable("EducationClassPlans");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("EducationPlans");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.RecomendationMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<string>("RecomendationText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RecomendationMessages");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<int>("OrderPosition")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.TopicPlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EducationClassPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationPlanId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationClassPlanId");

                    b.HasIndex("EducationPlanId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicPlanDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.TopicProgressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatisticId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicProgressDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EducationClassUser", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.EducationClass", null)
                        .WithMany()
                        .HasForeignKey("EducationClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsvitaDAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Answer", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Assignment", "Assignment")
                        .WithMany("Answers")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Assignment", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Assignment", "ParentAssignment")
                        .WithMany()
                        .HasForeignKey("ParentAssignmentId");

                    b.Navigation("ParentAssignment");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentProgressDetail", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.AssignmentSetProgressDetail", null)
                        .WithMany("AssignmentProgressDetails")
                        .HasForeignKey("AssignmentSetProgressDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentSetPlanDetail", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.EducationClassPlan", null)
                        .WithMany("AssignmentSetPlanDetails")
                        .HasForeignKey("EducationClassPlanId");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentSetProgressDetail", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Statistic", null)
                        .WithMany("AssignmentSetProgressDetails")
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Chapter", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Subject", "Subject")
                        .WithMany("Chapters")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.ContentBlock", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Material", "Material")
                        .WithMany("ContentBlocks")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClass", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.User", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClassPlan", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.EducationClass", null)
                        .WithOne("EducationClassPlan")
                        .HasForeignKey("OsvitaDAL.Entities.EducationClassPlan", "EducationClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationPlan", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.User", null)
                        .WithOne("EducationPlan")
                        .HasForeignKey("OsvitaDAL.Entities.EducationPlan", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Material", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Topic", "Topic")
                        .WithMany("Materials")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.RecomendationMessage", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.User", "User")
                        .WithMany("RecomendationMessages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Statistic", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.User", null)
                        .WithOne("Statistic")
                        .HasForeignKey("OsvitaDAL.Entities.Statistic", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Topic", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Chapter", "Chapter")
                        .WithMany("Topics")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.TopicPlanDetail", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.EducationClassPlan", "EducationClassPlan")
                        .WithMany("TopicPlanDetails")
                        .HasForeignKey("EducationClassPlanId");

                    b.HasOne("OsvitaDAL.Entities.EducationPlan", "EducationPlan")
                        .WithMany("TopicPlanDetails")
                        .HasForeignKey("EducationPlanId");

                    b.HasOne("OsvitaDAL.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationClassPlan");

                    b.Navigation("EducationPlan");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.TopicProgressDetail", b =>
                {
                    b.HasOne("OsvitaDAL.Entities.Statistic", "Statistic")
                        .WithMany("TopicProgressDetails")
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsvitaDAL.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statistic");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Assignment", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.AssignmentSetProgressDetail", b =>
                {
                    b.Navigation("AssignmentProgressDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Chapter", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClass", b =>
                {
                    b.Navigation("EducationClassPlan")
                        .IsRequired();
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationClassPlan", b =>
                {
                    b.Navigation("AssignmentSetPlanDetails");

                    b.Navigation("TopicPlanDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.EducationPlan", b =>
                {
                    b.Navigation("TopicPlanDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Material", b =>
                {
                    b.Navigation("ContentBlocks");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Statistic", b =>
                {
                    b.Navigation("AssignmentSetProgressDetails");

                    b.Navigation("TopicProgressDetails");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Subject", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.Topic", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("OsvitaDAL.Entities.User", b =>
                {
                    b.Navigation("EducationPlan")
                        .IsRequired();

                    b.Navigation("RecomendationMessages");

                    b.Navigation("Statistic")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
